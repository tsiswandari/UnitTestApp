apply plugin: 'android'
apply plugin: 'robolectric'

android {
    compileSdkVersion 19
    buildToolsVersion "19.0.3"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 19
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
}

dependencies {
    compile 'com.android.support:support-v4:18.0.0'
    compile fileTree(dir: 'libs', include: ['*.jar'])
    robolectricCompile group: 'junit', name: 'junit', version: '4.+'
    robolectricCompile 'org.robolectric:robolectric:2.+'
//    instrumentTestCompile 'junit:junit:4.+'
//    instrumentTestCompile 'org.robolectric:robolectric:2.+'
}

//task listAndroidJars << {
//    println android.applicationVariants.each {
//        println it
//    }
//
//    println android.plugin.getRuntimeJarList()
//}
//
//task listJars << {
//    configurations.robolectric.each { File file -> println file.name }
//}
//
//task libs(type: Sync) {
//    from configurations.robolectric
//    into "/tmp/libs"
//}
//task addTest {
//    def src = ['src/test/java']
//    def file = file("app.iml")
//
//    doLast {
//        try {
//            def parsedXml = (new XmlParser()).parse(file)
//            def node = parsedXml.component[1].content[0]
//            src.each {
//                def path = 'file://$MODULE_DIR$/' + "${it}"
//                def set = node.find { it.@url == path }
//                if (set == null) {
//                    new Node(node, 'sourceFolder', ['url': 'file://$MODULE_DIR$/' + "${it}", 'isTestSource': "true"])
//                    def writer = new StringWriter()
//                    new XmlNodePrinter(new PrintWriter(writer)).print(parsedXml)
//                    file.text = writer.toString()
//                }
//            }
//        } catch (FileNotFoundException e) {
//            // nop, iml not found
//        }
//    }
//}
//
//// always do the addtest on prebuild
//gradle.projectsEvaluated {
//    preBuild.dependsOn(addTest)
//}